# backend/docker-compose.yml
services:
  # Database
  postgres:
    image: postgres:15
    container_name: meeting-summarizer-db
    environment:
      POSTGRES_DB: meetings_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: elecon
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: meeting-summarizer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  # backend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: meeting-summarizer-backend
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/meeting_summarizer
  #     - SECRET_KEY=your-super-secret-key-change-in-production
  #     - ENVIRONMENT=development
  #     - DEBUG=true
  #     - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:8080"]
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   volumes:
  #     - ./app:/app/app
  #     - ./alembic:/app/alembic
  #   command: >
  #     sh -c "
  #       alembic upgrade head &&
  #       uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
  #     "
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # Database administration
  pgadmin:
    image: dpage/pgadmin4
    container_name: meeting-summarizer-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data: